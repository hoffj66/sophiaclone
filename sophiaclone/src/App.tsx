import './App.css'
import Header from './components/Header'
import Footer from './components/Footer'
import Content from './components/Content'
import { useEffect, useState } from 'react'

function App() {

  const [dataset, setDataset] = useState<string>("sales.csv");
  const [dataSnippet, setDataSnippet] = useState<any[]>([]);
  const [outPrompt, setOutPrompt] = useState<string>("");
  const [queryPrompt, setQueryPrompt] = useState<string>("");
  const [description, setDescription] = useState<string>(`<table>
  <tr>
    <th>Field</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>Account Name</td>
    <td>Name of the company or organization.</td>
  </tr>
  <tr>
    <td>Industry</td>
    <td>Industry sector the company operates in.</td>
  </tr>
  <tr>
    <td>Annual Revenue</td>
    <td>Revenue generated by the company annually.</td>
  </tr>
  <tr>
    <td>Revenue Target</td>
    <td>Target revenue set by the company.</td>
  </tr>
  <tr>
    <td>Key Decision Makers</td>
    <td>Names of individuals who hold decision-making authority.</td>
  </tr>
  <tr>
    <td>Main Challenges</td>
    <td>Primary challenges or obstacles faced by the company.</td>
  </tr>
  <tr>
    <td>Account Objectives</td>
    <td>Goals or objectives of the account.</td>
  </tr>
  <tr>
    <td>Key Products</td>
    <td>Primary products or services offered by the company.</td>
  </tr>
  <tr>
    <td>Contract Renewal Date</td>
    <td>Date when the current contract is due for renewal.</td>
  </tr>
  <tr>
    <td>Pipeline Value</td>
    <td>Estimated value of the sales pipeline.</td>
  </tr>
  <tr>
    <td>Competitors</td>
    <td>Names of competitor companies.</td>
  </tr>
  <tr>
    <td>Relationship Strength</td>
    <td>Strength of the relationship with the account (e.g., High, Medium, Low).</td>
  </tr>
  <tr>
    <td>Marketing Campaigns</td>
    <td>Marketing campaigns or strategies employed.</td>
  </tr>
  <tr>
    <td>Upsell Opportunities</td>
    <td>Potential opportunities for upselling additional products or services.</td>
  </tr>
  <tr>
    <td>Next Action Steps</td>
    <td>Next steps or actions planned in the sales process.</td>
  </tr>
  <tr>
    <td>Sales Rep</td>
    <td>Name of the sales representative handling the account.</td>
  </tr>
  <tr>
    <td>Territory</td>
    <td>Geographic territory assigned to the account.</td>
  </tr>
</table>`);
  const [queries, setQueries] = useState<any[]>([
    {"type": "count", "description": "Total number of accounts"},
    {"type": "count", "by": "Industry", "description": "Number of accounts per industry"},
    {"type": "count", "by": "Territory", "description": "Number of accounts per territory"},
    {"type": "count", "by": "Sales Rep", "description": "Number of accounts per sales representative"},
    {"type": "count", "by": "Relationship Strength", "description": "Number of accounts per relationship strength"}
  ]);
  const [question, setQuestion] = useState<string>("What would you like to explore today?");

  const onSelect = (e: any) => {
    setDataset(e.currentTarget.value);
  }

  const onDescriptionChange = (e: any) => {
    setDescription(e.currentTarget.value);
  }

  const onQueriesChange = (e: any) => {
    setQueries(JSON.parse(e.currentTarget.value));
  }

  const onQuestionChange = (e: any) => {
    setQuestion(e.currentTarget.value);
  }

  useEffect(() => {
    fetch(`http://localhost:3000/?dataset=${dataset}`)
      .then(response => response.json())
      .then((_data) => {
        setDataSnippet(_data.data)
      })
  }, [dataset])

  useEffect(() => {
    setOutPrompt(`I am a bot that gives a 'human readable' summary description of a dataset based on a subset of the data that includes a description of the fields and their purpose. The output should be well formatted html.  \n\nDATA : ${JSON.stringify(dataSnippet)}\n\nDESCRIPTION : `)
    setQueryPrompt(`
        I am a bot that can generate helpful search queries for datasets.  Currently, the only processing that is available is to get a 'count' of items in the set based on the metadata.  The queries will be a request in JSON array format.  The data is only a small subset and should be assumed that much more data exists in the set.  The queries should be most relevant to the QUESTION.

        DATA:  [{"Name" : "James Smith", "Net Worth" : 39000.00, "City" : "Chapel Hill", "Political Party" : "D"},{"Name" : "Jane Miller", "Net Worth" : 50000.00, "City" : "Carrboro","Political Party" : "R"}]
        
        QUESTION: Of the people who live in San Diego, what is the distribution of political parties?

        QUERIES:
        
        [
         {"type" : "count", "by" : "City", "description" : "Number of people that live in a certain City"},
         {"type" : "count", "by" : "Political Party", "description" : "Number of people in a specific political party"}
        ]
        
        DATA: ${JSON.stringify(dataSnippet)}\n\n

        QUESTION: ${question}

        QUERIES: 
        `)
  }, [question])


return (
  <div className='app'>
    <Header onSelect={onSelect} onDescriptionChange={onDescriptionChange} onQueriesChange={onQueriesChange} dataset={dataset} outPrompt={outPrompt} queryPrompt={queryPrompt} queries={queries} question={question} onQuestionChange={onQuestionChange} />
    <Content dataset={dataset} queries={queries} description={description} />
    <Footer />
  </div>
)
}

export default App
